name: Test AI Analysis Engine

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/analysis/**'
      - 'tests/**'
      - '.github/workflows/test-analysis.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/analysis/**'
      - 'tests/**'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-mock
    
    - name: Run unit tests with mocking
      run: |
        pytest tests/test_analysis_integration.py -v \
          --cov=src.analysis \
          --cov-report=xml \
          --cov-report=term-missing \
          -k "not integration"
    
    - name: Run integration tests (if API key available)
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      env:
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY_TEST }}
      run: |
        if [ ! -z "$ANTHROPIC_API_KEY" ]; then
          pytest tests/test_analysis_integration.py -v -m integration
        else
          echo "Skipping integration tests - no API key configured"
        fi
    
    - name: Upload coverage reports
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
    
    - name: Generate coverage badge
      if: matrix.python-version == '3.11'
      run: |
        coverage html
        echo "Coverage report generated in htmlcov/"
    
    - name: Upload coverage HTML report
      if: matrix.python-version == '3.11'
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: htmlcov/
    
    - name: Check test coverage threshold
      if: matrix.python-version == '3.11'
      run: |
        coverage report --fail-under=80
    
  performance-test:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-benchmark
    
    - name: Run performance benchmarks
      run: |
        pytest tests/test_analysis_integration.py::TestPerformance -v --benchmark-only
    
    - name: Upload benchmark results
      uses: actions/upload-artifact@v3
      with:
        name: benchmark-results
        path: .benchmarks/